{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineassembler\/init(swiftassembler:)","title":"init(swiftAssembler: MachineAssembler)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineassembler\/errors","title":"var errors: [String]","type":"property"},{"path":"\/documentation\/metamachines\/machineassembler\/lasterror","title":"var lastError: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineassembler\/assemble(_:atdirectory:indirectory:)","title":"func assemble(MetaMachine, atDirectory: URL, inDirectory: URL) -> (URL, FileWrapper)?","type":"method"}],"path":"\/documentation\/metamachines\/machineassembler","title":"MachineAssembler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinegenerator\/init(swiftgenerator:)","title":"init(swiftGenerator: MachineGenerator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinegenerator\/errors","title":"var errors: [String]","type":"property"},{"path":"\/documentation\/metamachines\/machinegenerator\/lasterror","title":"var lastError: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinegenerator\/generate(_:)","title":"func generate(MetaMachine) -> FileWrapper?","type":"method"}],"path":"\/documentation\/metamachines\/machinegenerator","title":"MachineGenerator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineparser\/init(swiftparser:)","title":"init(swiftParser: MachineParser)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineparser\/errors","title":"var errors: [String]","type":"property"},{"path":"\/documentation\/metamachines\/machineparser\/lasterror","title":"var lastError: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineparser\/parsemachine(atpath:)","title":"func parseMachine(atPath: String) -> MetaMachine?","type":"method"},{"path":"\/documentation\/metamachines\/machineparser\/parsemachine(aturl:)","title":"func parseMachine(atURL: URL) -> MetaMachine?","type":"method"},{"path":"\/documentation\/metamachines\/machineparser\/parsemachine(fromwrapper:)","title":"func parseMachine(fromWrapper: FileWrapper) -> MetaMachine?","type":"method"}],"path":"\/documentation\/metamachines\/machineparser","title":"MachineParser","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangementmutator\/additem(_:to:in:)","title":"func addItem<Path, T>(T, to: Path, in: inout Arrangement) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangementmutator\/deleteitem(attribute:atindex:in:)","title":"func deleteItem<Path, T>(attribute: Path, atIndex: Int, in: inout Arrangement) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/arrangementmutator\/deleteitems(table:items:in:)-1t9m4","title":"func deleteItems<Path, T>(table: Path, items: IndexSet, in: inout Arrangement) -> Result<Bool, AttributeError<Arrangement>>","type":"method"}],"title":"ArrangementMutator Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/arrangementmutator\/deleteitems(table:items:in:)-5eiyx","title":"func deleteItems<Path, T>(table: Path, items: IndexSet, in: inout Arrangement) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangementmutator\/modify(attribute:value:in:)","title":"func modify<Path>(attribute: Path, value: Path.Value, in: inout Arrangement) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangementmutator\/moveitems(attribute:in:from:to:)","title":"func moveItems<Path, T>(attribute: Path, in: inout Arrangement, from: IndexSet, to: Int) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangementmutator\/validate(arrangement:)","title":"func validate(arrangement: Arrangement) throws","type":"method"}],"path":"\/documentation\/metamachines\/arrangementmutator","title":"ArrangementMutator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/dependenciescontainer\/dependencies","title":"var dependencies: [MachineDependency]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/dependenciescontainer\/dependencyattributetype-8z14v","title":"var dependencyAttributeType: AttributeType","type":"property"}],"title":"DependenciesContainer Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/dependenciescontainer\/dependencyattributetype-9qa4b","title":"var dependencyAttributeType: AttributeType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/dependenciescontainer\/dependencyattributes-1lw98","title":"var dependencyAttributes: [Attribute]","type":"property"}],"title":"DependenciesContainer Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/dependenciescontainer\/dependencyattributes-2j2d4","title":"var dependencyAttributes: [Attribute]","type":"property"}],"path":"\/documentation\/metamachines\/dependenciescontainer","title":"DependenciesContainer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/dependencylayoutcontainer\/dependencylayout","title":"var dependencyLayout: [Field]","type":"property"}],"path":"\/documentation\/metamachines\/dependencylayoutcontainer","title":"DependencyLayoutContainer","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineattributesmutator\/didadditem(_:to:machine:)","title":"func didAddItem<Path, T>(T, to: Path, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machineattributesmutator\/diddeleteitem(attribute:atindex:machine:item:)","title":"func didDeleteItem<Path, T>(attribute: Path, atIndex: Int, machine: inout MetaMachine, item: T) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machineattributesmutator\/diddeleteitems(table:indices:machine:items:)","title":"func didDeleteItems<Path, T>(table: Path, indices: IndexSet, machine: inout MetaMachine, items: [T]) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machineattributesmutator\/didmoveitems(attribute:machine:from:to:items:)","title":"func didMoveItems<Path, T>(attribute: Path, machine: inout MetaMachine, from: IndexSet, to: Int, items: [T]) -> Result<Bool, AttributeError<Path.Root>>","type":"method"}],"path":"\/documentation\/metamachines\/machineattributesmutator","title":"MachineAttributesMutator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinemodifier\/didmodify(attribute:oldvalue:newvalue:machine:)","title":"func didModify<Path>(attribute: Path, oldValue: Path.Value, newValue: Path.Value, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemodifier\/validate(machine:)","title":"func validate(machine: MetaMachine) throws","type":"method"}],"path":"\/documentation\/metamachines\/machinemodifier","title":"MachineModifier","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinemutator\/additem(_:to:machine:)","title":"func addItem<Path, T>(T, to: Path, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/delete(dependencies:machine:)","title":"func delete(dependencies: IndexSet, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/delete(states:machine:)","title":"func delete(states: IndexSet, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/delete(transitions:attachedto:machine:)","title":"func delete(transitions: IndexSet, attachedTo: StateName, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/deletedependency(atindex:machine:)","title":"func deleteDependency(atIndex: Int, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/deleteitem(attribute:atindex:machine:)","title":"func deleteItem<Path, T>(attribute: Path, atIndex: Int, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machinemutator\/deleteitems(table:items:machine:)-37bkp","title":"func deleteItems<Path, T>(table: Path, items: IndexSet, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"}],"title":"MachineMutator Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutator\/deleteitems(table:items:machine:)-78xeu","title":"func deleteItems<Path, T>(table: Path, items: IndexSet, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/deletestate(atindex:machine:)","title":"func deleteState(atIndex: Int, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/deletetransition(atindex:attachedto:machine:)","title":"func deleteTransition(atIndex: Int, attachedTo: StateName, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/modify(attribute:value:machine:)","title":"func modify<Path>(attribute: Path, value: Path.Value, machine: inout MetaMachine) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/moveitems(attribute:machine:from:to:)","title":"func moveItems<Path, T>(attribute: Path, machine: inout MetaMachine, from: IndexSet, to: Int) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/newdependency(_:machine:)","title":"func newDependency(MachineDependency, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/newstate(machine:)","title":"func newState(machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/newtransition(source:target:condition:machine:)","title":"func newTransition(source: StateName, target: StateName, condition: Expression?, machine: inout MetaMachine) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/machinemutator\/validate(machine:)","title":"func validate(machine: MetaMachine) throws","type":"method"}],"path":"\/documentation\/metamachines\/machinemutator","title":"MachineMutator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/didchangestatesname(machine:state:index:oldname:)","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/didchangestatesname(machine:state:index:oldname:)","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/didcreatedependency(machine:dependency:index:)","title":"func didCreateDependency(machine: inout MetaMachine, dependency: MachineDependency, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/didcreatedependency(machine:dependency:index:)","title":"func didCreateDependency(machine: inout MetaMachine, dependency: MachineDependency, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/didcreatenewstate(machine:state:index:)","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/didcreatenewstate(machine:state:index:)","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/didcreatenewtransition(machine:transition:stateindex:transitionindex:)","title":"func didCreateNewTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, transitionIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/didcreatenewtransition(machine:transition:stateindex:transitionindex:)","title":"func didCreateNewTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, transitionIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletedependencies(machine:dependency:at:)","title":"func didDeleteDependencies(machine: inout MetaMachine, dependency: [MachineDependency], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletedependencies(machine:dependency:at:)","title":"func didDeleteDependencies(machine: inout MetaMachine, dependency: [MachineDependency], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletedependency(machine:dependency:at:)","title":"func didDeleteDependency(machine: inout MetaMachine, dependency: MachineDependency, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletedependency(machine:dependency:at:)","title":"func didDeleteDependency(machine: inout MetaMachine, dependency: MachineDependency, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletestate(machine:state:at:)","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletestate(machine:state:at:)","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletestates(machine:state:at:)","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletestates(machine:state:at:)","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletetransition(machine:transition:stateindex:at:)","title":"func didDeleteTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletetransition(machine:transition:stateindex:at:)","title":"func didDeleteTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/diddeletetransitions(machine:transition:stateindex:at:)","title":"func didDeleteTransitions(machine: inout MetaMachine, transition: [Transition], stateIndex: Int, at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/diddeletetransitions(machine:transition:stateindex:at:)","title":"func didDeleteTransitions(machine: inout MetaMachine, transition: [Transition], stateIndex: Int, at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/metamachines\/machineschema\/update(from:)","title":"func update(from: MetaMachine)","type":"method"}],"title":"MachineSchema Implementations","type":"groupMarker"}],"path":"\/documentation\/metamachines\/machinemutatorresponder\/update(from:)","title":"func update(from: MetaMachine)","type":"method"}],"path":"\/documentation\/metamachines\/machinemutatorresponder","title":"MachineMutatorResponder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineschema\/stateschema-swift.associatedtype","title":"StateSchema","type":"associatedtype"},{"path":"\/documentation\/metamachines\/machineschema\/transitionschema-swift.associatedtype","title":"TransitionSchema","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineschema\/init(name:initialstate:states:dependencies:attributes:metadata:)","title":"init(name: String, initialState: StateName, states: [State], dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machineschema\/stateschema-swift.property","title":"var stateSchema: Self.StateSchema","type":"property"},{"path":"\/documentation\/metamachines\/machineschema\/transitionschema-swift.property","title":"var transitionSchema: Self.TransitionSchema","type":"property"},{"path":"\/documentation\/metamachines\/machineschema\/trigger","title":"var trigger: AnyTrigger<MetaMachine>","type":"property"}],"path":"\/documentation\/metamachines\/machineschema","title":"MachineSchema","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/metamachines\/mutatorcontainer\/mutator-swift.associatedtype","title":"Mutator","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/mutatorcontainer\/mutator-swift.property","title":"var mutator: Self.Mutator","type":"property"}],"path":"\/documentation\/metamachines\/mutatorcontainer","title":"MutatorContainer","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftarrangementconvertible\/init(from:atdirectory:)","title":"init(from: Arrangement, atDirectory: URL)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftarrangementconvertible\/swiftarrangement()","title":"func swiftArrangement() throws -> Arrangement","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftarrangementconvertible\/initialswiftarrangement","title":"static var initialSwiftArrangement: Self","type":"property"}],"path":"\/documentation\/metamachines\/swiftarrangementconvertible","title":"SwiftArrangementConvertible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftmachinesconvertible\/init(from:)","title":"init(from: Machine)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftmachinesconvertible\/swiftmachine()","title":"func swiftMachine() throws -> Machine","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftmachinesconvertible\/initialswiftmachine","title":"static var initialSwiftMachine: Self","type":"property"}],"path":"\/documentation\/metamachines\/swiftmachinesconvertible","title":"SwiftMachinesConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/action\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/metamachines\/action\/init(name:implementation:language:)","title":"init(name: String, implementation: Code, language: Language)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/action\/implementation","title":"var implementation: Code","type":"property"},{"path":"\/documentation\/metamachines\/action\/language","title":"var language: Language","type":"property"},{"path":"\/documentation\/metamachines\/action\/name","title":"var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/action\/internal(language:code:)","title":"static func `internal`(language: Language, code: Code) -> Action","type":"method"},{"path":"\/documentation\/metamachines\/action\/onentry(language:code:)","title":"static func onEntry(language: Language, code: Code) -> Action","type":"method"},{"path":"\/documentation\/metamachines\/action\/onexit(language:code:)","title":"static func onExit(language: Language, code: Code) -> Action","type":"method"},{"path":"\/documentation\/metamachines\/action\/onresume(language:code:)","title":"static func onResume(language: Language, code: Code) -> Action","type":"method"},{"path":"\/documentation\/metamachines\/action\/onsuspend(language:code:)","title":"static func onSuspend(language: Language, code: Code) -> Action","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/action\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/action\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/action","title":"Action","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/init(loadatfilepath:)","title":"init(loadAtFilePath: URL) throws","type":"init"},{"path":"\/documentation\/metamachines\/arrangement\/init(semantics:name:dependencies:attributes:metadata:)","title":"init(semantics: Arrangement.Semantics, name: String, dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/arrangement\/init(vhdl:)","title":"init(vhdl: Arrangement)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/dependencies","title":"var dependencies: [MachineDependency]","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/dependencyattributetype","title":"var dependencyAttributeType: AttributeType","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/dependencyattributes","title":"var dependencyAttributes: [Attribute]","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/errorbag","title":"var errorBag: ErrorBag<Arrangement>","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/id-br5l","title":"var id: UUID","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/metadata","title":"var metaData: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/mutator","title":"let mutator: ArrangementMutator","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/path-swift.property","title":"var path: Path<Arrangement, Arrangement>","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.property","title":"var semantics: Arrangement.Semantics","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/allmachinenames(relativeto:)","title":"func allMachineNames(relativeTo: URL) -> Set<String>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/allmachines(relativeto:)","title":"func allMachines(relativeTo: URL) throws -> [URL : MetaMachine]","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/flatteneddependencies(relativeto:)","title":"func flattenedDependencies(relativeTo: URL) throws -> [FlattenedDependency]","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/save(at:)","title":"func save(at: URL) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/path-swift.type.property","title":"static var path: Path<Arrangement, Arrangement>","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/supportedsemantics","title":"static var supportedSemantics: [Arrangement.Semantics]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/initialarrangement(forsemantics:filepath:)","title":"static func initialArrangement(forSemantics: Arrangement.Semantics, filePath: URL) -> Arrangement","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/attributes","title":"case attributes","type":"case"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/dependencies","title":"case dependencies","type":"case"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/metadata","title":"case metaData","type":"case"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/semantics","title":"case semantics","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/arrangement\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/arrangement\/codingkeys","title":"Arrangement.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/other","title":"case other","type":"case"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/swiftfsm","title":"case swiftfsm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/arrangement\/semantics-swift.enum","title":"Arrangement.Semantics","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/metamachines\/arrangement\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/metamachines\/arrangement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/metamachines\/arrangement\/==(_:_:)","title":"static func == (Arrangement, Arrangement) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/arrangement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/metamachines\/arrangement\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/id-8c03g","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/metamachines\/arrangement\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/additem(_:to:)","title":"func addItem<Path, T>(T, to: Path) -> Result<Bool, AttributeError<Arrangement>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/deleteitem(table:atindex:)","title":"func deleteItem<Path, T>(table: Path, atIndex: Int) -> Result<Bool, AttributeError<Arrangement>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/deleteitems(table:items:)","title":"func deleteItems<Path, T>(table: Path, items: IndexSet) -> Result<Bool, AttributeError<Arrangement>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/modify(attribute:value:)","title":"func modify<Path>(attribute: Path, value: Path.Value) -> Result<Bool, AttributeError<Arrangement>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/moveitems(table:from:to:)","title":"func moveItems<Path, T>(table: Path, from: IndexSet, to: Int) -> Result<Bool, AttributeError<Arrangement>>","type":"method"},{"path":"\/documentation\/metamachines\/arrangement\/validate()","title":"func validate() throws","type":"method"}],"path":"\/documentation\/metamachines\/arrangement\/modifiable-implementations","title":"Modifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/validate(builder:)","title":"func validate(builder: (ValidationPath<Self.Path>) -> AnyValidator<Self>) throws","type":"method"}],"path":"\/documentation\/metamachines\/arrangement\/pathcontainer-implementations","title":"PathContainer Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/init(from:atdirectory:)","title":"init(from: Arrangement, atDirectory: URL)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/swiftarrangement()","title":"func swiftArrangement() throws -> Arrangement","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/arrangement\/initialswiftarrangement","title":"static var initialSwiftArrangement: Arrangement","type":"property"}],"path":"\/documentation\/metamachines\/arrangement\/swiftarrangementconvertible-implementations","title":"SwiftArrangementConvertible Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/arrangement","title":"Arrangement","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/root","title":"CXXFuncRefs.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/complexcollectionproperty","title":"CXXFuncRefs.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/complexproperty","title":"CXXFuncRefs.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxfuncrefs\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/cxxfuncrefs\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/cxxfuncrefs\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxfuncrefs","title":"CXXFuncRefs","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/root","title":"CXXIncludes.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/cxxincludes\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/complexcollectionproperty","title":"CXXIncludes.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/cxxincludes\/complexproperty","title":"CXXIncludes.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxincludes\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxincludes\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/cxxincludes\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/cxxincludes\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxincludes","title":"CXXIncludes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/init(name:initialstate:states:dependencies:attributes:metadata:)","title":"init(name: String, initialState: StateName, states: [State], dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/cxxschema\/init(semantics:)","title":"init?(semantics: MetaMachine.Semantics)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/dependencylayout","title":"var dependencyLayout: [Field]","type":"property"},{"path":"\/documentation\/metamachines\/cxxschema\/stateschema","title":"var stateSchema: CXXStateSchema","type":"property"},{"path":"\/documentation\/metamachines\/cxxschema\/transitionschema","title":"var transitionSchema: EmptySchema<MetaMachine>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/didchangestatesname(machine:state:index:oldname:)-86q6e","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/didcreatenewstate(machine:state:index:)-7ealn","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletestate(machine:state:at:)-9lapc","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletestates(machine:state:at:)-5sjhv","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/update(from:)-56jme","title":"func update(from: MetaMachine)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/trigger-xzlo","title":"var trigger: AnyTrigger<MetaMachine>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/didchangestatesname(machine:state:index:oldname:)-xdz1","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/didcreatedependency(machine:dependency:index:)","title":"func didCreateDependency(machine: inout MetaMachine, dependency: MachineDependency, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/didcreatenewstate(machine:state:index:)-94lsd","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/didcreatenewtransition(machine:transition:stateindex:transitionindex:)","title":"func didCreateNewTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, transitionIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletedependencies(machine:dependency:at:)","title":"func didDeleteDependencies(machine: inout MetaMachine, dependency: [MachineDependency], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletedependency(machine:dependency:at:)","title":"func didDeleteDependency(machine: inout MetaMachine, dependency: MachineDependency, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletestate(machine:state:at:)-7dwm6","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletestates(machine:state:at:)-7rzlu","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletetransition(machine:transition:stateindex:at:)","title":"func didDeleteTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/diddeletetransitions(machine:transition:stateindex:at:)","title":"func didDeleteTransitions(machine: inout MetaMachine, transition: [Transition], stateIndex: Int, at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxschema\/update(from:)-9s3x8","title":"func update(from: MetaMachine)","type":"method"}],"path":"\/documentation\/metamachines\/cxxschema\/machineschema-implementations","title":"MachineSchema Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/groups","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"path":"\/documentation\/metamachines\/cxxschema\/trigger-2oven","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/makevalidator(root:)","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxschema\/group","title":"CXXSchema.Group","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxschema\/schemaprotocol-implementations","title":"SchemaProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxschema","title":"CXXSchema","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/update(from:)","title":"func update(from: MetaMachine)","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/updatesuspendvalues(_:)","title":"func updateSuspendValues(Set<String>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/root","title":"CXXSettings.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/cxxsettings\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/complexcollectionproperty","title":"CXXSettings.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/cxxsettings\/complexproperty","title":"CXXSettings.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxsettings\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxsettings\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/cxxsettings\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/cxxsettings\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxsettings","title":"CXXSettings","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstateschema\/root","title":"CXXStateSchema.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstateschema\/groups","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"path":"\/documentation\/metamachines\/cxxstateschema\/trigger","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstateschema\/makevalidator(root:)","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstateschema\/group","title":"CXXStateSchema.Group","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxstateschema\/schemaprotocol-implementations","title":"SchemaProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxstateschema","title":"CXXStateSchema","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/path","title":"let path: CollectionSearchPath<MetaMachine, [State], AttributeGroup>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/root","title":"CXXStateVariables.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/complexcollectionproperty","title":"CXXStateVariables.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/complexproperty","title":"CXXStateVariables.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/cxxstatevariables\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/cxxstatevariables\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/cxxstatevariables\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/cxxstatevariables","title":"CXXStateVariables","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/flatteneddependency\/dependencies","title":"var dependencies: [FlattenedDependency]","type":"property"},{"path":"\/documentation\/metamachines\/flatteneddependency\/machine","title":"var machine: MetaMachine","type":"property"},{"path":"\/documentation\/metamachines\/flatteneddependency\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/metamachines\/flatteneddependency","title":"FlattenedDependency","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinedependency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/metamachines\/machinedependency\/init(relativepath:fields:attributes:metadata:)","title":"init(relativePath: String, fields: [Field], attributes: [Label : Attribute], metaData: [Label : Attribute])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinedependency\/attributes","title":"var attributes: [Label : Attribute]","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/complexattribute","title":"var complexAttribute: Attribute","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/complexattributetype","title":"var complexAttributeType: AttributeType","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/fields","title":"var fields: [Field]","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/metadata","title":"var metaData: [Label : Attribute]","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/metamachines\/machinedependency\/relativepath","title":"var relativePath: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinedependency\/filepath(relativeto:)","title":"func filePath(relativeTo: URL) -> URL","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/machinedependency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/machinedependency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/machinedependency","title":"MachineDependency","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/init(filepath:)","title":"init(filePath: URL) throws","type":"init"},{"path":"\/documentation\/metamachines\/metamachine\/init(from:)-9es8x","title":"init(from: FileWrapper) throws","type":"init"},{"path":"\/documentation\/metamachines\/metamachine\/init(semantics:mutator:name:initialstate:states:dependencies:attributes:metadata:)","title":"init(semantics: MetaMachine.Semantics, mutator: MetaMachine.Mutator, name: String, initialState: StateName, states: [State], dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/metamachine\/init(semantics:name:initialstate:states:dependencies:attributes:metadata:)","title":"init(semantics: MetaMachine.Semantics, name: String, initialState: StateName, states: [State], dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/metamachine\/init(vhdl:)","title":"init(vhdl: Machine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/acceptingstates","title":"var acceptingStates: [State]","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/dependencies","title":"var dependencies: [MachineDependency]","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/dependencyattributetype","title":"var dependencyAttributeType: AttributeType","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/dependencyattributes","title":"var dependencyAttributes: [Attribute]","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/errorbag","title":"var errorBag: ErrorBag<MetaMachine>","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/initialstate","title":"var initialState: StateName","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/metadata","title":"var metaData: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/mutator-swift.property","title":"var mutator: MetaMachine.Mutator","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/path-swift.property","title":"var path: Path<MetaMachine, MetaMachine>","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.property","title":"var semantics: MetaMachine.Semantics","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/states","title":"var states: [State]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/additem(_:to:)","title":"func addItem<Path, T>(T, to: Path) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/changestatename(atindex:to:)","title":"func changeStateName(atIndex: Int, to: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/delete(dependencies:)","title":"func delete(dependencies: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/delete(states:)","title":"func delete(states: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/delete(transitions:attachedto:)","title":"func delete(transitions: IndexSet, attachedTo: StateName) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/deletedependency(atindex:)","title":"func deleteDependency(atIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/deleteitem(table:atindex:)","title":"func deleteItem<Path, T>(table: Path, atIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/deleteitems(table:items:)","title":"func deleteItems<Path, T>(table: Path, items: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/deletestate(atindex:)","title":"func deleteState(atIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/deletetransition(atindex:attachedto:)","title":"func deleteTransition(atIndex: Int, attachedTo: StateName) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/filewrapper()","title":"func fileWrapper() throws -> FileWrapper","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/modify(attribute:value:)","title":"func modify<Path>(attribute: Path, value: Path.Value) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/moveitems(table:from:to:)","title":"func moveItems<Path, T>(table: Path, from: IndexSet, to: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/newdependency(_:)","title":"func newDependency(MachineDependency) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/newstate()","title":"func newState() -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/newtransition(source:target:condition:)","title":"func newTransition(source: StateName, target: StateName, condition: Expression?) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/save()","title":"func save() throws","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/mutator-swift.typealias","title":"MetaMachine.Mutator","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/path-swift.type.property","title":"static var path: Path<MetaMachine, MetaMachine>","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/supportedsemantics","title":"static var supportedSemantics: [MetaMachine.Semantics]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/initialmachine(forsemantics:filepath:)","title":"static func initialMachine(forSemantics: MetaMachine.Semantics, filePath: URL) -> MetaMachine","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/initialvhdlmachine(filepath:)","title":"static func initialVHDLMachine(filePath: URL) -> MetaMachine","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/attributes","title":"case attributes","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/initialstate","title":"case initialState","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/metadata","title":"case metaData","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/semantics","title":"case semantics","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/states","title":"case states","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/transitions","title":"case transitions","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/metamachine\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/metamachine\/codingkeys","title":"MetaMachine.CodingKeys","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/_(_:_:)-5cl6s","title":"static func < (MetaMachine.Semantics, MetaMachine.Semantics) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/clfsm","title":"case clfsm","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/other","title":"case other","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/spartanfsm","title":"case spartanfsm","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/swiftfsm","title":"case swiftfsm","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/ucfsm","title":"case ucfsm","type":"case"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/vhdl","title":"case vhdl","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/'...(_:)-12vvy","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/'...(_:)-7h7h1","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/_(_:_:)-18a8v","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/_=(_:_:)-4blq2","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/_=(_:_:)-8o0kg","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/metamachine\/semantics-swift.enum","title":"MetaMachine.Semantics","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/init(from:)-2lmvt","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/metamachines\/metamachine\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/metamachines\/metamachine\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/metamachines\/metamachine\/==(_:_:)","title":"static func == (MetaMachine, MetaMachine) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/metamachine\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/metamachines\/metamachine\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/validate(builder:)","title":"func validate(builder: (ValidationPath<Self.Path>) -> AnyValidator<Self>) throws","type":"method"}],"path":"\/documentation\/metamachines\/metamachine\/pathcontainer-implementations","title":"PathContainer Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/init(from:)-1hhgv","title":"init(from: Machine)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/swiftmachine()","title":"func swiftMachine() throws -> Machine","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/metamachine\/initialswiftmachine","title":"static var initialSwiftMachine: MetaMachine","type":"property"}],"path":"\/documentation\/metamachines\/metamachine\/swiftmachinesconvertible-implementations","title":"SwiftMachinesConvertible Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/metamachine","title":"MetaMachine","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/==(_:_:)","title":"static func == (State, State) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/metamachines\/state\/init(name:actions:transitions:attributes:metadata:)","title":"init(name: String, actions: [Action], transitions: [Transition], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/state\/init(vhdl:in:)","title":"init(vhdl: State, in: Machine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/actions","title":"var actions: [Action]","type":"property"},{"path":"\/documentation\/metamachines\/state\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/state\/id-1p80j","title":"var id: StateName","type":"property"},{"path":"\/documentation\/metamachines\/state\/metadata","title":"var metaData: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/state\/name","title":"var name: StateName","type":"property"},{"path":"\/documentation\/metamachines\/state\/transitions","title":"var transitions: [Transition]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/targettransitions(in:)","title":"func targetTransitions(in: MetaMachine) -> [Transition]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/state\/id-28fij","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/metamachines\/state\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/state","title":"State","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/path","title":"let path: Path<MetaMachine, Attribute>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/root","title":"SwiftfsmModuleDependencies.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/complexcollectionproperty","title":"SwiftfsmModuleDependencies.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/complexproperty","title":"SwiftfsmModuleDependencies.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/pathtoattributes","title":"var pathToAttributes: Path<Attribute, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/pathtofields","title":"var pathToFields: Path<Attribute, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies\/complexprotocol-implementations","title":"ComplexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmmoduledependencies","title":"SwiftfsmModuleDependencies","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/path","title":"let path: CollectionSearchPath<MetaMachine, [Attribute], Attribute>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/root","title":"SwiftfsmPackage.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/complexcollectionproperty","title":"SwiftfsmPackage.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/complexproperty","title":"SwiftfsmPackage.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmpackage\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/pathtoattributes","title":"var pathToAttributes: Path<Attribute, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmpackage\/pathtofields","title":"var pathToFields: Path<Attribute, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmpackage\/complexprotocol-implementations","title":"ComplexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmpackage","title":"SwiftfsmPackage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/available","title":"var available: Set<String>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/path","title":"let path: Path<MetaMachine, Attribute>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/triggers-5x5pg","title":"var triggers: AnyTrigger<MetaMachine>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/root","title":"SwiftfsmParameters.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/triggers-7sj5e","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/complexcollectionproperty","title":"SwiftfsmParameters.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/complexproperty","title":"SwiftfsmParameters.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmparameters\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/pathtoattributes","title":"var pathToAttributes: Path<Attribute, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmparameters\/pathtofields","title":"var pathToFields: Path<Attribute, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmparameters\/complexprotocol-implementations","title":"ComplexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmparameters","title":"SwiftfsmParameters","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/available","title":"var available: Set<String>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/triggers-7tcqd","title":"var triggers: AnyTrigger<MetaMachine>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/triggers-1ng89","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/complexcollectionproperty","title":"SwiftfsmRinglet.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/complexproperty","title":"SwiftfsmRinglet.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmringlet\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmringlet\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmringlet\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmringlet","title":"SwiftfsmRinglet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/init(name:initialstate:states:dependencies:attributes:metadata:)","title":"init(name: String, initialState: StateName, states: [State], dependencies: [MachineDependency], attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/dependencylayout","title":"var dependencyLayout: [Field]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/stateschema","title":"var stateSchema: SwiftfsmStateSchema","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/transitionschema","title":"var transitionSchema: EmptySchema<MetaMachine>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didchangestatesname(machine:state:index:oldname:)-c9n1","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didcreatenewstate(machine:state:index:)-ms2n","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletestate(machine:state:at:)-7ljs0","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletestates(machine:state:at:)-1ppi","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/update(from:)-85262","title":"func update(from: MetaMachine)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/trigger-8zcl1","title":"var trigger: AnyTrigger<MetaMachine>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didchangestatesname(machine:state:index:oldname:)-1e815","title":"func didChangeStatesName(machine: inout MetaMachine, state: State, index: Int, oldName: String) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didcreatedependency(machine:dependency:index:)","title":"func didCreateDependency(machine: inout MetaMachine, dependency: MachineDependency, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didcreatenewstate(machine:state:index:)-5ruf8","title":"func didCreateNewState(machine: inout MetaMachine, state: State, index: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/didcreatenewtransition(machine:transition:stateindex:transitionindex:)","title":"func didCreateNewTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, transitionIndex: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletedependencies(machine:dependency:at:)","title":"func didDeleteDependencies(machine: inout MetaMachine, dependency: [MachineDependency], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletedependency(machine:dependency:at:)","title":"func didDeleteDependency(machine: inout MetaMachine, dependency: MachineDependency, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletestate(machine:state:at:)-1o2ua","title":"func didDeleteState(machine: inout MetaMachine, state: State, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletestates(machine:state:at:)-2awhp","title":"func didDeleteStates(machine: inout MetaMachine, state: [State], at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletetransition(machine:transition:stateindex:at:)","title":"func didDeleteTransition(machine: inout MetaMachine, transition: Transition, stateIndex: Int, at: Int) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/diddeletetransitions(machine:transition:stateindex:at:)","title":"func didDeleteTransitions(machine: inout MetaMachine, transition: [Transition], stateIndex: Int, at: IndexSet) -> Result<Bool, AttributeError<MetaMachine>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/update(from:)-3c99o","title":"func update(from: MetaMachine)","type":"method"}],"path":"\/documentation\/metamachines\/swiftfsmschema\/machineschema-implementations","title":"MachineSchema Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/groups","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/trigger-7xgxa","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/makevalidator(root:)","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmschema\/group","title":"SwiftfsmSchema.Group","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmschema\/schemaprotocol-implementations","title":"SchemaProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmschema","title":"SwiftfsmSchema","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/update(from:)","title":"func update(from: MetaMachine)","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/updatesuspendvalues(_:)","title":"func updateSuspendValues(Set<String>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/root","title":"SwiftfsmSettings.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/complexcollectionproperty","title":"SwiftfsmSettings.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/complexproperty","title":"SwiftfsmSettings.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmsettings\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmsettings\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmsettings\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmsettings","title":"SwiftfsmSettings","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstateschema\/root","title":"SwiftfsmStateSchema.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstateschema\/groups","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstateschema\/trigger","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstateschema\/makevalidator(root:)","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstateschema\/group","title":"SwiftfsmStateSchema.Group","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmstateschema\/schemaprotocol-implementations","title":"SchemaProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmstateschema","title":"SwiftfsmStateSchema","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/path","title":"let path: CollectionSearchPath<MetaMachine, [State], AttributeGroup>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/root","title":"SwiftfsmStateSettings.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/complexcollectionproperty","title":"SwiftfsmStateSettings.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/complexproperty","title":"SwiftfsmStateSettings.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmstatesettings\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmstatesettings","title":"SwiftfsmStateSettings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/path","title":"let path: CollectionSearchPath<MetaMachine, [State], AttributeGroup>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/root","title":"SwiftfsmStateVariables.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/complexcollectionproperty","title":"SwiftfsmStateVariables.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/complexproperty","title":"SwiftfsmStateVariables.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmstatevariables\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmstatevariables","title":"SwiftfsmStateVariables","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/path","title":"let path: Path<MetaMachine, AttributeGroup>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/triggers-70olb","title":"var triggers: AnyTrigger<MetaMachine>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/root","title":"SwiftfsmVariables.Root","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/alltriggers","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/groupvalidation","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/triggers-71ixe","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/complexcollectionproperty","title":"SwiftfsmVariables.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/complexproperty","title":"SwiftfsmVariables.ComplexProperty","type":"typealias"}],"path":"\/documentation\/metamachines\/swiftfsmvariables\/attributable-implementations","title":"Attributable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/metamachines\/swiftfsmvariables\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"path":"\/documentation\/metamachines\/swiftfsmvariables\/groupprotocol-implementations","title":"GroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/swiftfsmvariables","title":"SwiftfsmVariables","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/metamachines\/transition\/init(condition:target:attributes:metadata:)","title":"init(condition: Code?, target: StateName, attributes: [AttributeGroup], metaData: [AttributeGroup])","type":"init"},{"path":"\/documentation\/metamachines\/transition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/metamachines\/transition\/init(vhdl:in:)","title":"init(vhdl: Transition, in: Machine)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/metamachines\/transition\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/transition\/condition","title":"var condition: Expression?","type":"property"},{"path":"\/documentation\/metamachines\/transition\/metadata","title":"var metaData: [AttributeGroup]","type":"property"},{"path":"\/documentation\/metamachines\/transition\/target","title":"var target: StateName","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/metamachines\/transition\/targetstate(in:)","title":"func targetState(in: MetaMachine) -> State","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/metamachines\/transition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/metamachines\/transition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/metamachines\/transition","title":"Transition","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/metamachines\/conversionerror","title":"ConversionError","type":"typealias"},{"path":"\/documentation\/metamachines\/machineserror","title":"MachinesError","type":"typealias"},{"path":"\/documentation\/metamachines\/statename","title":"StateName","type":"typealias"}],"path":"\/documentation\/metamachines","title":"MetaMachines","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}